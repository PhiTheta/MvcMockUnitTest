@model MvcUnitMockTest.Models.Transfer

@{
    ViewBag.Title = "TransferMove";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>TransferMove</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Transfer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.IdFrom)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.Time)

        @*<div class="form-group">
            @Html.LabelFor(model => model.IdFrom, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdFrom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdFrom, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
    @Html.DropDownListFor(model => model.IdTo,
        new List<SelectListItem> {
            new SelectListItem { Value = "1" , Text = "Betalkonto" },
            new SelectListItem { Value = "2" , Text = "Lönekonto" },
            new SelectListItem { Value = "3" , Text = "Sparkonto 1" },
            new SelectListItem { Value = "4" , Text = "Sparkonto 2" }
        },
        new { @class = "control-label col-md-2" })
    @*<div class="col-md-10">
        @Html.EditorFor(model => model.IdTo, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.IdTo, "", new { @class = "text-danger" })
    </div>*@
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.IdTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdTo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdTo, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Sum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sum, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Details")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
